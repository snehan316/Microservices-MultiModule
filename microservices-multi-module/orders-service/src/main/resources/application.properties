spring.jpa.show-sql=true
spring.datasource.url=jdbc:mysql://localhost:3306/orders-database?autoReconnect=true&useSSL=false&createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

server.port=8081
spring.application.name=orders-service

#actuator properties(metrics and insights related)

#enable circuit-breaker metrics
management.health.circuitbreakers.enabled=true
#enable all end-points(by default only health is enabled)
management.endpoints.web.exposure.include=* 
#show details is set to never by default
management.endpoint.health.show-details=always



#Resilience4j Properties
# inventory is a name chosen by us for inventory-service, same to be used in controller class
#register for health checks - to see the states
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
#buffer size for events
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#basis for changing from closed to open state
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
#after how many failed requests should the state change from closed to open
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
# % of request FAILURES
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#after how many seconds should the state change from open to half-open
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s

resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3

resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true





